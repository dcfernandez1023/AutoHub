[{"C:\\Users\\Dominic\\auto-hub\\src\\index.js":"1","C:\\Users\\Dominic\\auto-hub\\src\\components\\CarModal.js":"2","C:\\Users\\Dominic\\auto-hub\\src\\components\\UpcomingMaintenance.js":"3","C:\\Users\\Dominic\\auto-hub\\src\\controllers\\db.js":"4","C:\\Users\\Dominic\\auto-hub\\src\\controllers\\genericFunctions.js":"5","C:\\Users\\Dominic\\auto-hub\\src\\controllers\\errorLog.js":"6","C:\\Users\\Dominic\\auto-hub\\src\\controllers\\storage.js":"7","C:\\Users\\Dominic\\auto-hub\\src\\models\\serviceLog.js":"8","C:\\Users\\Dominic\\auto-hub\\src\\components\\Home.js":"9","C:\\Users\\Dominic\\auto-hub\\src\\components\\HomeMobile.js":"10"},{"size":350,"mtime":1607838589485,"results":"11","hashOfConfig":"12"},{"size":10349,"mtime":1611900872101,"results":"13","hashOfConfig":"12"},{"size":12339,"mtime":1611900872117,"results":"14","hashOfConfig":"12"},{"size":2253,"mtime":1611900872117,"results":"15","hashOfConfig":"12"},{"size":2434,"mtime":1611900872117,"results":"16","hashOfConfig":"12"},{"size":106,"mtime":1611900872117,"results":"17","hashOfConfig":"12"},{"size":2024,"mtime":1611900872117,"results":"18","hashOfConfig":"12"},{"size":127,"mtime":1611900872117,"results":"19","hashOfConfig":"12"},{"size":8063,"mtime":1623988280640,"results":"20","hashOfConfig":"12"},{"size":8235,"mtime":1623988252577,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"py296n",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dominic\\auto-hub\\src\\index.js",[],["46","47"],"C:\\Users\\Dominic\\auto-hub\\src\\components\\CarModal.js",["48","49"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst DB = require('../controllers/db.js');\r\nconst LOGMODEL = require('../models/serviceLog.js');\r\nconst STORAGE = require('../controllers/storage.js');\r\nconst CARMODEL = require('../models/car.js');\r\nconst GENERICFUNCTIONS = require('../controllers/genericFunctions.js');\r\n\r\nfunction CarModal(props) {\r\n\r\n  const[isLoading, setIsLoading] = useState(false); //flag to toggle spinner\r\n  const[showCarModal, setShowCarModal] = useState(false); //flag to display car modal\r\n  const[car, setNewCar] = useState(); //state object for creating a new car\r\n  const[carImage, setCarImage] = useState(); //temp holder for car image upload\r\n  const[carModalFormValidated, setCarModalFormValidated] = useState(false); //flag to toggle form validation of the car modal\r\n  const[title, setTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setNewCar(props.car);\r\n    setShowCarModal(props.show);\r\n    setTitle(props.title);\r\n  }, [props.show, props.title, props.car])\r\n\r\n  //adds a car to the cars db collectionName\r\n  function saveCar() {\r\n    if(props.userInfo === undefined) {\r\n      //TODO: handle this error more elegantly\r\n      alert(\"User data undefined. Cannot add new car\");\r\n      setCarModalFormValidated(false);\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    var userCreated = props.userInfo.email;\r\n    var isNew = false;\r\n    if(car.carId.trim().length === 0) {\r\n      car.carId = GENERICFUNCTIONS.generateId();\r\n      isNew = true;\r\n    }\r\n    car.userCreated = userCreated;\r\n    if(carImage !== undefined) {\r\n      var extension = carImage.name.split('.').pop();\r\n      var imageId = GENERICFUNCTIONS.generateId();\r\n      var fileType = carImage.type;\r\n      var prevImageUrl = \"\";\r\n      if(car.imageUrl.trim().length !== 0) {\r\n        prevImageUrl = car.imageUrl;\r\n      }\r\n      car.imageId = imageId;\r\n      var renamedFile = new File([carImage], imageId + \".\" + extension, {\r\n        type: fileType\r\n      });\r\n      STORAGE.uploadFile(renamedFile, \"images/\"+props.userInfo.uid+\"/\"+carImage.name, prevImageUrl,\r\n        function(url) {\r\n          car.imageUrl = url;\r\n          DB.writeOne(car.carId, car, \"cars\",\r\n            function() {\r\n              if(isNew) {\r\n                saveNewServiceLog(car.carId);\r\n              }\r\n              else {\r\n                handleCarModalClose();\r\n              }\r\n            },\r\n            function(error) {\r\n              //TODO: handle this error more elegantly\r\n              alert(error.toString());\r\n              setIsLoading(false);\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      DB.writeOne(car.carId, car, \"cars\",\r\n        function() {\r\n          if(isNew) {\r\n            saveNewServiceLog(car.carId);\r\n          }\r\n          else {\r\n            handleCarModalClose();\r\n          }\r\n        },\r\n        function(error) {\r\n          //TODO: handle this error more elegantly\r\n          alert(error.toString());\r\n          setIsLoading(false);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  function saveNewServiceLog(carId) {\r\n    var serviceLog = JSON.parse(JSON.stringify(LOGMODEL.serviceLog));\r\n    serviceLog.userCreated = props.userInfo.email;\r\n    serviceLog.logId = GENERICFUNCTIONS.generateId();\r\n    serviceLog.carReferenceId = carId;\r\n    DB.writeOne(serviceLog.logId, serviceLog, \"serviceLogs\",\r\n      function() {\r\n        handleCarModalClose();\r\n      },\r\n      function(error) {\r\n        alert(error);\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  //function to handle car modal closing\r\n  function handleCarModalClose() {\r\n    setIsLoading(false);\r\n    props.setShow(false);\r\n    setNewCar(CARMODEL.car);\r\n    setCarImage();\r\n    setShowCarModal(false);\r\n    setCarModalFormValidated(false);\r\n  }\r\n\r\n  //function to handle adding values to car\r\n  function onChangeNewCar(e, type) {\r\n    var carCopy = JSON.parse(JSON.stringify(car));\r\n    //var carCopy = car;\r\n    var name = [e.target.name][0];\r\n    var value = e.target.value;\r\n    if(type === \"number\" && isNaN(value)) {\r\n      return;\r\n    }\r\n    carCopy[name] = value;\r\n    setNewCar(carCopy);\r\n    setCarModalFormValidated(false);\r\n  }\r\n\r\n  //handle submit for car modal form\r\n  function handleCarModalSubmit(e) {\r\n    setCarModalFormValidated(true);\r\n    if(checkNewCarFields() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    else {\r\n      saveCar();\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  //check if required fields have been filled\r\n  function checkNewCarFields() {\r\n    var isValid = true;\r\n    for(var i = 0; i < CARMODEL.publicFields.length; i++) {\r\n      var field = CARMODEL.publicFields[i];\r\n      if(field.required && car[field.value].toString().trim().length === 0) {\r\n        car[field.value] = \"\";\r\n        isValid = false;\r\n      }\r\n      if(field.type === \"number\") {\r\n        car[field.value] = Number(car[field.value].toString().trim());\r\n      }\r\n      else {\r\n        car[field.value] = car[field.value].trim();\r\n      }\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  if(car === undefined) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show = {showCarModal}\r\n      onHide = {handleCarModalClose}\r\n      backdrop = \"static\"\r\n      keyboard = {false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title> {title} </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated = {carModalFormValidated} onSubmit = {handleCarModalSubmit}>\r\n          <Row style = {{marginLeft: \"3%\", marginRight: \"3%\"}}>\r\n            {CARMODEL.publicFields.map((field) => {\r\n              if(field.inputType === \"input\") {\r\n                return (\r\n                    <Col md = {field.modalColSpan} style = {{marginBottom: \"1%\"}}>\r\n                      <Form.Label> {field.displayName} </Form.Label>\r\n                      <Form.Control\r\n                        required = {field.required}\r\n                        as = {field.inputType}\r\n                        name = {field.value}\r\n                        value = {car[field.value]}\r\n                        onChange = {(e) => {\r\n                          onChangeNewCar(e, field.type);\r\n                        }}\r\n                      />\r\n                      <Form.Control.Feedback type = \"invalid\">\r\n                        Required\r\n                      </Form.Control.Feedback>\r\n                    </Col>\r\n                );\r\n              }\r\n              else if(field.inputType === \"select\") {\r\n                return (\r\n                    <Col md = {field.modalColSpan} style = {{marginBottom: \"1%\"}}>\r\n                      <Form.Label> {field.displayName} </Form.Label>\r\n                      <Form.Control\r\n                        required = {field.required}\r\n                        as = {field.inputType}\r\n                        name = {field.value}\r\n                        onChange = {(e) => {\r\n                          onChangeNewCar(e, field.type);\r\n                        }}\r\n                      >\r\n                        {car.year.trim().length === 0 ?\r\n                          <option value = \"\" selected disabled hidden> Select </option>\r\n                          :\r\n                          <div></div>\r\n                        }\r\n                        {field.modalSelectData.map((data) => {\r\n                          if(data === Number(car.year)) {\r\n                            return (\r\n                              <option value = {data} selected> {data} </option>\r\n                            )\r\n                          }\r\n                          return (\r\n                            <option value = {data}> {data} </option>\r\n                          );\r\n                        })}\r\n                      </Form.Control>\r\n                      <Form.Control.Feedback type = \"invalid\">\r\n                        Required\r\n                      </Form.Control.Feedback>\r\n                    </Col>\r\n                );\r\n              }\r\n              else {\r\n                return (\r\n                    <Col md = {field.modalColSpan} style = {{marginBottom: \"1%\"}}>\r\n                      <Form.Label> {field.displayName} </Form.Label>\r\n                      <Form.Control\r\n                        required = {field.required}\r\n                        as = {field.inputType}\r\n                        name = {field.value}\r\n                        value = {car[field.value]}\r\n                        onChange = {(e) => {\r\n                          onChangeNewCar(e, field.type);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                );\r\n              }\r\n            })}\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label> Image </Form.Label>\r\n                  <Form.File\r\n                    id = \"image\"\r\n                    onChange = {(e) => {\r\n                      var carCopy = JSON.parse(JSON.stringify(car));\r\n                      var file = e.target.files[0];\r\n                      if(file) {\r\n                        setCarImage(file);\r\n                        setNewCar(carCopy);\r\n                      }\r\n                      else {\r\n                        setCarImage();\r\n                        carCopy.imageId = \"\";\r\n                        setNewCar(carCopy);\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n            <Col>\r\n              <Button type = \"submit\" variant = \"success\" disabled = {isLoading} style = {{float: \"right\", marginTop: \"10%\"}}>\r\n                {isLoading ?\r\n                  <Spinner animation = \"border\" size = \"sm\" status = \"role\"/>\r\n                  :\r\n                  <div></div>\r\n                }\r\n                Save\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CarModal;\r\n",["50","51"],"C:\\Users\\Dominic\\auto-hub\\src\\components\\UpcomingMaintenance.js",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Calendar from 'react-calendar';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nconst DB = require('../controllers/db.js');\r\n\r\nfunction UpcomingMaintenance(props) {\r\n\r\n  const [serviceLogs, setServiceLogs] = useState([]);\r\n  const[isLoading, setIsLoading] = useState(false);\r\n  const[upcomingServices, setUpcomingServices] = useState();\r\n  const[overdueServices, setOverdueServices] = useState();\r\n\r\n  useEffect(() => {\r\n    getServiceLogs(props.cars);\r\n  }, [props.cars])\r\n\r\n  function getServiceLogs(cars) {\r\n    if(cars === undefined) {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    if(cars.length === 1) {\r\n      DB.getQuerey(\"carReferenceId\", cars[0].carId, \"serviceLogs\").onSnapshot(quereySnapshot => {\r\n        var logs = [];\r\n        if(quereySnapshot.docs.length > 1 || quereySnapshot.docs[0] === undefined) {\r\n          return;\r\n        }\r\n        else {\r\n          var serviceLog = quereySnapshot.docs[0].data();\r\n          if(serviceLog !== undefined) {\r\n            logs.push(serviceLog);\r\n            setServiceLogs(logs);\r\n            setIsLoading(false);\r\n          }\r\n        }\r\n        var upcoming = [];\r\n        var overdue = [];\r\n        for(var i = 0; i < logs.length; i++) {\r\n          var log = logs[i]\r\n          var u = getUpcomingServices(log)\r\n          var o = getOverdueServices(log)\r\n          for(var j = 0; j < u.length; j++) {\r\n            upcoming.push(u[j]);\r\n          }\r\n          for(var n = 0; n < o.length; n++) {\r\n            overdue.push(o[n]);\r\n          }\r\n        }\r\n        setUpcomingServices(upcoming);\r\n        setOverdueServices(overdue);\r\n      });\r\n    }\r\n    else {\r\n      DB.getQuerey(\"userCreated\", props.userCreated, \"serviceLogs\").onSnapshot(quereySnapshot => {\r\n        var logs = [];\r\n        if(quereySnapshot.docs === undefined) {\r\n          return;\r\n        }\r\n        else {\r\n          if(serviceLogs !== undefined) {\r\n            for(var i = 0; i < quereySnapshot.docs.length; i++) {\r\n              logs.push(quereySnapshot.docs[i].data());\r\n            }\r\n            setServiceLogs(logs);\r\n            setIsLoading(false);\r\n          }\r\n        }\r\n        var upcoming = [];\r\n        var overdue = [];\r\n        for(var i = 0; i < logs.length; i++) {\r\n          var log = logs[i]\r\n          var u = getUpcomingServices(log)\r\n          var o = getOverdueServices(log)\r\n          for(var j = 0; j < u.length; j++) {\r\n            upcoming.push(u[j]);\r\n          }\r\n          for(var n = 0; n < o.length; n++) {\r\n            overdue.push(o[n]);\r\n          }\r\n        }\r\n        setUpcomingServices(upcoming);\r\n        setOverdueServices(overdue);\r\n      });\r\n    }\r\n  }\r\n\r\n  function findCar(carId) {\r\n    if(carId === undefined || carId === null) {\r\n      return null;\r\n    }\r\n    for(var i = 0; i < props.cars.length; i++) {\r\n      if(props.cars[i].carId === carId) {\r\n        return props.cars[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  function getOverdueServices(log) {\r\n    if(log === undefined || log === null) {\r\n      return [];\r\n    }\r\n    var overdue = [];\r\n    var sstIds = [];\r\n    var today = new Date();\r\n    var car = findCar(log.carReferenceId);\r\n    if(car === null || car === undefined) {\r\n      return [];\r\n    }\r\n    var currMileage = Number(car.mileage);\r\n    for(var i = 0; i < log.scheduledLog.length; i++) {\r\n      if(!sstIds.includes(log.scheduledLog[i].sstRefId)) {\r\n        sstIds.push(log.scheduledLog[i].sstRefId);\r\n      }\r\n    }\r\n    for(var i = 0; i < sstIds.length; i++) {\r\n      var sstId = sstIds[i];\r\n      var mostRecentDate = 0;\r\n      var mostRecentService = null;\r\n      for(var j = 0; j < log.scheduledLog.length; j++) {\r\n        var service = log.scheduledLog[j];\r\n        var datePerformed = new Date(service.datePerformed).getTime()\r\n        if(service.sstRefId === sstId && datePerformed > mostRecentDate) {\r\n          mostRecentDate = datePerformed;\r\n          mostRecentService = service;\r\n        }\r\n      }\r\n      if(mostRecentService !== null && new Date(mostRecentService.nextServiceDate).getTime() < today.getTime() || mostRecentService !== null && Number(mostRecentService.nextServiceMileage) < currMileage) {\r\n        //same as saying: if the next service date and next service mileage are blank/empty, then they aren't overdue\r\n        if(mostRecentService.nextServiceDate.toString().trim().length === 0 && mostRecentService.nextServiceMileage.toString().trim().length === 0) {\r\n          continue;\r\n        }\r\n        overdue.push(mostRecentService);\r\n      }\r\n    }\r\n    return overdue;\r\n  }\r\n\r\n  function getUpcomingServices(log) {\r\n    if(log === undefined || log === null) {\r\n      return [];\r\n    }\r\n    var upcoming = [];\r\n    var sstIds = [];\r\n    var today = new Date();\r\n    var car = findCar(log.carReferenceId);\r\n    if(car === null || car === undefined) {\r\n      return [];\r\n    }\r\n    var currMileage = Number(car.mileage);\r\n    for(var i = 0; i < log.scheduledLog.length; i++) {\r\n      if(!sstIds.includes(log.scheduledLog[i].sstRefId)) {\r\n        sstIds.push(log.scheduledLog[i].sstRefId);\r\n      }\r\n    }\r\n    for(var i = 0; i < sstIds.length; i++) {\r\n      var sstId = sstIds[i];\r\n      var mostRecentDate = 0;\r\n      var mostRecentService = null;\r\n      for(var j = 0; j < log.scheduledLog.length; j++) {\r\n        var service = log.scheduledLog[j];\r\n        var datePerformed = new Date(service.datePerformed).getTime();\r\n        if(service.sstRefId === sstId && datePerformed >= mostRecentDate) {\r\n          mostRecentDate = datePerformed;\r\n          mostRecentService = service;\r\n        }\r\n      }\r\n      if(mostRecentService !== null && new Date(mostRecentService.nextServiceDate).getTime() >= today.getTime() || mostRecentService !== null && Number(mostRecentService.nextServiceMileage) >= currMileage) {\r\n        //same as saying: if the mostRecentService is included within the overdue list, then don't add it to the upcoming list\r\n        if(new Date(mostRecentService.nextServiceDate).getTime() < today.getTime() || mostRecentService !== null && Number(mostRecentService.nextServiceMileage) < currMileage) {\r\n          continue;\r\n        }\r\n        upcoming.push(mostRecentService);\r\n      }\r\n    }\r\n    return upcoming;\r\n  }\r\n\r\n  function getCarName(carId) {\r\n    for(var i = 0; i < props.cars.length; i++) {\r\n      var car = props.cars[i];\r\n      if(car.carId === carId) {\r\n        return car.name;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  function getDueText(service, carId) {\r\n    var text = \"Due:\";\r\n    var isDate = false;\r\n    var currMileage = Number(findCar(carId).mileage);\r\n    var today = new Date();\r\n    if(service.nextServiceDate.trim().length !== 0) {\r\n      text = text + \" \" + service.nextServiceDate.trim();\r\n      isDate = true;\r\n    }\r\n    if(Number(service.nextServiceMileage.toString().trim()) !== 0 && service.nextServiceMileage.toString().trim().length !== 0) {\r\n      if(isDate) {\r\n        text = text + \" or \" + service.nextServiceMileage.toString().trim() + \" miles\";\r\n      }\r\n      else {\r\n        text = text + \" \" + service.nextServiceMileage.toString().trim() + \" miles\";\r\n      }\r\n    }\r\n    return text;\r\n  }\r\n\r\n  if(props.cars === undefined || upcomingServices === undefined || overdueServices === undefined) {\r\n    if(isLoading) {\r\n      return (\r\n        <Container fluid>\r\n          <div style = {{textAlign: \"center\", marginTop: \"3%\"}}>\r\n            <Spinner animation = \"border\"/>\r\n          </div>\r\n        </Container>\r\n      );\r\n    }\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <Card.Header>\r\n              Upcoming Maintenance 🛠️\r\n            </Card.Header>\r\n            <Card.Body>\r\n              Error occurred in finding upcoming maintenance\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Accordion defaultActiveKey = \"upcoming-maintenance\">\r\n          <Card>\r\n            <Accordion.Toggle as = {Card.Header} eventKey = \"upcoming-maintenance\">\r\n              <Row>\r\n                <Col xs = {10}>\r\n                  Upcoming Maintenance 🛠️\r\n                </Col>\r\n                <Col xs = {2} style = {{textAlign: \"right\"}}>\r\n                  <Image src = \"/expand_collapse.png\" style = {{width: \"15px\", height: \"15px\"}} />\r\n                </Col>\r\n              </Row>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey = \"upcoming-maintenance\">\r\n              <Card.Body>\r\n                {serviceLogs.length === 0 ?\r\n                  <div> You have nothing scheduled for your cars. </div>\r\n                  :\r\n                  <Row>\r\n                    <Col>\r\n                      <Row>\r\n                        <Col>\r\n                          <div>\r\n                            {overdueServices.map((service) => {\r\n                              return (\r\n                                <div style = {{border: \"1px solid white\"}}>\r\n                                  <Row>\r\n                                    <Col xs = {8}>\r\n                                      <h6>\r\n                                        {getCarName(service.carReferenceId) + \" - \" + service.serviceName}\r\n                                      </h6>\r\n                                    </Col>\r\n                                    <Col xs = {4} style = {{textAlign: \"right\"}}>\r\n                                      <Badge variant = \"danger\">\r\n                                        ! Overdue\r\n                                      </Badge>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <Row>\r\n                                    <Col style = {{textIndent: \"2%\"}}>\r\n                                      <small> ⌛ {getDueText(service, service.carReferenceId)} </small>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <hr style = {{border: \"1px solid lightGray\", height: \"50%\"}} />\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col>\r\n                          <div>\r\n                            {upcomingServices.map((service) => {\r\n                              return (\r\n                                <div style = {{border: \"1px solid white\"}}>\r\n                                  <Row>\r\n                                    <Col>\r\n                                      <h6> {getCarName(service.carReferenceId) + \" - \" + service.serviceName} </h6>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <Row>\r\n                                    <Col style = {{textIndent: \"2%\"}}>\r\n                                      <small> ⌛ {getDueText(service, service.carReferenceId)} </small>\r\n                                    </Col>\r\n                                  </Row>\r\n                                  <hr style = {{border: \"1px solid lightGray\", height: \"50%\"}} />\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </div>\r\n                          {upcomingServices.length === 0 && overdueServices.length === 0 ?\r\n                            <div> You have nothing scheduled for your cars. </div>\r\n                            :\r\n                            <div> </div>\r\n                          }\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                }\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default UpcomingMaintenance;\r\n","C:\\Users\\Dominic\\auto-hub\\src\\controllers\\db.js",[],"C:\\Users\\Dominic\\auto-hub\\src\\controllers\\genericFunctions.js",[],"C:\\Users\\Dominic\\auto-hub\\src\\controllers\\errorLog.js",[],"C:\\Users\\Dominic\\auto-hub\\src\\controllers\\storage.js",[],"C:\\Users\\Dominic\\auto-hub\\src\\models\\serviceLog.js",[],"C:\\Users\\Dominic\\auto-hub\\src\\components\\Home.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"C:\\Users\\Dominic\\auto-hub\\src\\components\\HomeMobile.js",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":17},{"ruleId":"103","severity":1,"message":"107","line":9,"column":16,"nodeType":"105","messageId":"106","endLine":9,"endColumn":22},{"ruleId":"99","replacedBy":"108"},{"ruleId":"101","replacedBy":"109"},{"ruleId":"103","severity":1,"message":"110","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":17},{"ruleId":"103","severity":1,"message":"111","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":27,"column":6,"nodeType":"114","endLine":27,"endColumn":18,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":82,"column":17,"nodeType":"105","messageId":"118","endLine":82,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":127,"column":13,"nodeType":"105","messageId":"118","endLine":127,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":139,"column":37,"nodeType":"121","messageId":"122","endLine":139,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":139,"column":112,"nodeType":"121","messageId":"122","endLine":139,"endColumn":114},{"ruleId":"119","severity":1,"message":"123","line":139,"column":112,"nodeType":"121","messageId":"122","endLine":139,"endColumn":114},{"ruleId":"119","severity":1,"message":"123","line":139,"column":142,"nodeType":"121","messageId":"122","endLine":139,"endColumn":144},{"ruleId":"116","severity":1,"message":"117","line":167,"column":13,"nodeType":"105","messageId":"118","endLine":167,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":179,"column":37,"nodeType":"121","messageId":"122","endLine":179,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":179,"column":113,"nodeType":"121","messageId":"122","endLine":179,"endColumn":115},{"ruleId":"119","severity":1,"message":"123","line":179,"column":113,"nodeType":"121","messageId":"122","endLine":179,"endColumn":115},{"ruleId":"119","severity":1,"message":"123","line":179,"column":143,"nodeType":"121","messageId":"122","endLine":179,"endColumn":145},{"ruleId":"119","severity":1,"message":"123","line":181,"column":84,"nodeType":"121","messageId":"122","endLine":181,"endColumn":86},{"ruleId":"119","severity":1,"message":"123","line":181,"column":114,"nodeType":"121","messageId":"122","endLine":181,"endColumn":116},{"ruleId":"103","severity":1,"message":"124","line":203,"column":9,"nodeType":"105","messageId":"106","endLine":203,"endColumn":20},{"ruleId":"103","severity":1,"message":"125","line":204,"column":9,"nodeType":"105","messageId":"106","endLine":204,"endColumn":14},{"ruleId":"103","severity":1,"message":"126","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":12},{"ruleId":"103","severity":1,"message":"127","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":22},{"ruleId":"103","severity":1,"message":"128","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":16},{"ruleId":"103","severity":1,"message":"129","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":18,"column":16,"nodeType":"105","messageId":"106","endLine":18,"endColumn":22},{"ruleId":"103","severity":1,"message":"130","line":24,"column":7,"nodeType":"105","messageId":"106","endLine":24,"endColumn":14},{"ruleId":"103","severity":1,"message":"131","line":26,"column":7,"nodeType":"105","messageId":"106","endLine":26,"endColumn":23},{"ruleId":"112","severity":1,"message":"132","line":36,"column":6,"nodeType":"114","endLine":36,"endColumn":22,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"134","line":114,"column":21,"nodeType":"105","messageId":"118","endLine":114,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":122,"column":65,"nodeType":"137","messageId":"138","endLine":122,"endColumn":66},{"ruleId":"135","severity":1,"message":"136","line":134,"column":61,"nodeType":"137","messageId":"138","endLine":134,"endColumn":62},{"ruleId":"139","severity":1,"message":"140","line":159,"column":21,"nodeType":"141","endLine":163,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":161,"column":63,"nodeType":"137","messageId":"138","endLine":161,"endColumn":64},{"ruleId":"135","severity":1,"message":"136","line":178,"column":59,"nodeType":"137","messageId":"138","endLine":178,"endColumn":60},{"ruleId":"103","severity":1,"message":"126","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":12},{"ruleId":"103","severity":1,"message":"127","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":22},{"ruleId":"103","severity":1,"message":"128","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":16},{"ruleId":"103","severity":1,"message":"129","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":13},{"ruleId":"103","severity":1,"message":"142","line":17,"column":8,"nodeType":"105","messageId":"106","endLine":17,"endColumn":14},{"ruleId":"103","severity":1,"message":"107","line":19,"column":16,"nodeType":"105","messageId":"106","endLine":19,"endColumn":22},{"ruleId":"103","severity":1,"message":"130","line":26,"column":7,"nodeType":"105","messageId":"106","endLine":26,"endColumn":14},{"ruleId":"103","severity":1,"message":"131","line":27,"column":7,"nodeType":"105","messageId":"106","endLine":27,"endColumn":23},{"ruleId":"112","severity":1,"message":"132","line":37,"column":6,"nodeType":"114","endLine":37,"endColumn":22,"suggestions":"143"},{"ruleId":"116","severity":1,"message":"134","line":121,"column":21,"nodeType":"105","messageId":"118","endLine":121,"endColumn":26},{"ruleId":"135","severity":1,"message":"136","line":129,"column":65,"nodeType":"137","messageId":"138","endLine":129,"endColumn":66},{"ruleId":"135","severity":1,"message":"136","line":141,"column":61,"nodeType":"137","messageId":"138","endLine":141,"endColumn":62},{"ruleId":"139","severity":1,"message":"140","line":166,"column":21,"nodeType":"141","endLine":170,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":168,"column":63,"nodeType":"137","messageId":"138","endLine":168,"endColumn":64},{"ruleId":"135","severity":1,"message":"136","line":185,"column":59,"nodeType":"137","messageId":"138","endLine":185,"endColumn":60},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.",["144"],["145"],"'ListGroup' is defined but never used.","'Calendar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getServiceLogs'. Either include it or remove the dependency array.","ArrayExpression",["146"],"no-redeclare","'i' is already defined.","redeclared","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'currMileage' is assigned a value but never used.","'today' is assigned a value but never used.","'Form' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Modal' is defined but never used.","'STORAGE' is assigned a value but never used.","'GENERICFUNCTIONS' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCars'. Either include it or remove the dependency array.",["147"],"'style' is already defined.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Figure' is defined but never used.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},"Update the dependencies array to be: [getServiceLogs, props.cars]",{"range":"154","text":"155"},"Update the dependencies array to be: [getCars, props.userInfo]",{"range":"156","text":"157"},{"range":"158","text":"157"},[936,948],"[getServiceLogs, props.cars]",[1388,1404],"[getCars, props.userInfo]",[1439,1455]]