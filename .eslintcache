[{"C:\\Users\\domin\\autohub\\src\\App.js":"1","C:\\Users\\domin\\autohub\\src\\index.js":"2","C:\\Users\\domin\\autohub\\src\\components\\Login.js":"3","C:\\Users\\domin\\autohub\\src\\controllers\\auth.js":"4","C:\\Users\\domin\\autohub\\src\\controllers\\firebaseapp.js":"5","C:\\Users\\domin\\autohub\\src\\controllers\\db.js":"6","C:\\Users\\domin\\autohub\\src\\components\\Home.js":"7","C:\\Users\\domin\\autohub\\src\\components\\AppNavbar.js":"8","C:\\Users\\domin\\autohub\\src\\models\\car.js":"9","C:\\Users\\domin\\autohub\\src\\controllers\\genericFunctions.js":"10","C:\\Users\\domin\\autohub\\src\\components\\HomeMobile.js":"11","C:\\Users\\domin\\autohub\\src\\controllers\\storage.js":"12"},{"size":2177,"mtime":1606369601499,"results":"13","hashOfConfig":"14"},{"size":338,"mtime":1606338417443,"results":"15","hashOfConfig":"14"},{"size":2397,"mtime":1606206533045,"results":"16","hashOfConfig":"14"},{"size":855,"mtime":1606124166902,"results":"17","hashOfConfig":"14"},{"size":539,"mtime":1606122737011,"results":"18","hashOfConfig":"14"},{"size":955,"mtime":1606121513107,"results":"19","hashOfConfig":"14"},{"size":15880,"mtime":1606717027083,"results":"20","hashOfConfig":"14"},{"size":1186,"mtime":1606471074000,"results":"21","hashOfConfig":"14"},{"size":1824,"mtime":1606599611268,"results":"22","hashOfConfig":"14"},{"size":789,"mtime":1606472062075,"results":"23","hashOfConfig":"14"},{"size":15797,"mtime":1606714792032,"results":"24","hashOfConfig":"14"},{"size":864,"mtime":1606600678449,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"8mgafs",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\domin\\autohub\\src\\App.js",["55","56"],"import React, { useState, useEffect } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Login from './components/Login.js';\nimport AppNavbar from './components/AppNavbar.js';\nimport Home from './components/Home.js';\nimport HomeMobile from './components/HomeMobile.js';\n\nconst AUTH = require('./controllers/auth.js');\nconst MOBILEBREAKPOINT = 500;\n\nfunction App() {\n\n  const[userInfo, setUserInfo] = useState();\n  const[screenWidth, setScreenWidth] = useState(window.innerWidth); //pixel size of screen, used to determine when to render components for smaller devices\n\n  useEffect(() => {\n    isUserSignedin();\n    detectMobile();\n  }, []);\n\n  //sets userInfo state object\n  //passes a call back to AUTH controller to set state object of this component\n  function isUserSignedin() {\n    const callback = (user) => {\n      setUserInfo(user);\n    }\n    AUTH.isUserSignedin(callback);\n  }\n\n  //detects smaller device (mobile)\n  function detectMobile() {\n    window.addEventListener(\"resize\", setScreenWidth(window.innerWidth));\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path = \"/\">\n          {userInfo === null\n            ?\n              <body style = {{backgroundImage: \"url('tools.gif')\"}}>\n                <Login\n                  googleSignin = {AUTH.googleSignin}\n                />\n              </body>\n            :\n              <Container fluid>\n                {screenWidth < MOBILEBREAKPOINT ?\n                  <div>\n                    <AppNavbar/>\n                    <HomeMobile\n                      userInfo = {userInfo}\n                    />\n                  </div>\n                :\n                  <div>\n                    <AppNavbar/>\n                    <Home\n                      userInfo = {userInfo}\n                    />\n                  </div>\n                }\n              </Container>\n          }\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n",["57","58"],"C:\\Users\\domin\\autohub\\src\\index.js",[],["59","60"],"C:\\Users\\domin\\autohub\\src\\components\\Login.js",["61","62","63"],"C:\\Users\\domin\\autohub\\src\\controllers\\auth.js",[],"C:\\Users\\domin\\autohub\\src\\controllers\\firebaseapp.js",[],"C:\\Users\\domin\\autohub\\src\\controllers\\db.js",[],"C:\\Users\\domin\\autohub\\src\\components\\Home.js",["64","65","66","67","68","69","70","71"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport '../component-css/Home.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst DB = require('../controllers/db.js');\r\nconst STORAGE = require('../controllers/storage.js');\r\nconst CARMODEL = require('../models/car.js');\r\nconst GENERICFUNCTIONS = require('../controllers/genericFunctions.js');\r\n\r\nfunction Home(props) {\r\n\r\n  const[cars, setCars] = useState(); //user's Cars\r\n  const[newCar, setNewCar] = useState({}); //state object for creating a new car\r\n  const[newCarImage, setNewCarImage] = useState(); //temp holder for newCar image upload\r\n  const[showCarModal, setShowCarModal] = useState(false); //flag to display car modal\r\n  const[isListView, setIsListView] = useState(false); //flag to toggle the mode of displaying cars (list vs. grid)\r\n  const[carModalFormValidated, setCarModalFormValidated] = useState(false); //flag to toggle form validation of the car modal\r\n\r\n  useEffect(() => {\r\n    getCars();\r\n    setNewCar(CARMODEL.car);\r\n  }, [props.userInfo])\r\n\r\n  //CAR FUNCTIONS\r\n\r\n  //gets all of the user's cars from db & sets a listener on the car collection with documents matching the user's email\r\n  function getCars() {\r\n    if(props.userInfo === undefined) {\r\n      return;\r\n    }\r\n    DB.getQuerey(\"userCreated\", props.userInfo.email, \"cars\").onSnapshot(quereySnapshot => {\r\n      var cars = [];\r\n      console.log(cars);\r\n      for(var i = 0; i < quereySnapshot.docs.length; i++) {\r\n        cars.push(quereySnapshot.docs[i].data());\r\n      }\r\n      setCars(cars);\r\n    });\r\n  }\r\n\r\n  //adds a car to the cars db collectionName\r\n  function addCar() {\r\n    if(props.userInfo === undefined) {\r\n      //TODO: handle this error more elegantly\r\n      alert(\"User data undefined. Cannot add new car\");\r\n    }\r\n    var userCreated = props.userInfo.email;\r\n    var carId = uuidv4().toString() + new Date().getTime();\r\n    newCar.userCreated = userCreated;\r\n    newCar.carId = carId;\r\n    if(newCarImage !== undefined) {\r\n      STORAGE.uploadFile(newCarImage, \"images/\"+props.userInfo.uid+\"/\"+newCarImage.name,\r\n        function(url) {\r\n          newCar.imageUrl = url;\r\n          DB.writeOne(carId, newCar, \"cars\",\r\n            function() {\r\n              handleCarModalClose();\r\n            },\r\n            function(error) {\r\n              //TODO: handle this error more elegantly\r\n              alert(error.toString());\r\n            }\r\n          );\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      DB.writeOne(carId, newCar, \"cars\",\r\n        function() {\r\n          handleCarModalClose();\r\n        },\r\n        function(error) {\r\n          //TODO: handle this error more elegantly\r\n          alert(error.toString());\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  //function to handle car modal closing\r\n  function handleCarModalClose() {\r\n    setNewCar(CARMODEL.car);\r\n    setNewCarImage();\r\n    setShowCarModal(false);\r\n    setCarModalFormValidated(false);\r\n  }\r\n\r\n  //function to handle adding values to newCar\r\n  function onChangeNewCar(e) {\r\n    var newCarCopy = JSON.parse(JSON.stringify(newCar));\r\n    var name = [e.target.name][0];\r\n    var value = e.target.value;\r\n    newCarCopy[name] = value;\r\n    setNewCar(newCarCopy);\r\n    setCarModalFormValidated(false);\r\n  }\r\n\r\n  //handle submit for car modal form\r\n  function handleCarModalSubmit(e) {\r\n    const form = e.currentTarget;\r\n    setCarModalFormValidated(true);\r\n    if(checkNewCarFields() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    else {\r\n      addCar();\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  //check if required fields have been filled\r\n  function checkNewCarFields() {\r\n    var isValid = true;\r\n    for(var i = 0; i < CARMODEL.publicFields.length; i++) {\r\n      var field = CARMODEL.publicFields[i];\r\n      if(field.required && newCar[field.value].toString().trim().length === 0) {\r\n        newCar[field.value] = \"\";\r\n        isValid = false;\r\n      }\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  if(cars === undefined) {\r\n    return (\r\n      <Container fluid>\r\n        <div style = {{textAlign: \"center\", marginTop: \"3%\"}}>\r\n          <Spinner animation = \"border\"/>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <Container fluid>\r\n        <Modal\r\n          show = {showCarModal}\r\n          onHide = {handleCarModalClose}\r\n          backdrop = \"static\"\r\n          keyboard = {false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title> Add Car </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form noValidate validated = {carModalFormValidated} onSubmit = {handleCarModalSubmit}>\r\n              <Row style = {{marginLeft: \"3%\", marginRight: \"3%\"}}>\r\n                {CARMODEL.publicFields.map((field) => {\r\n                  if(field.inputType === \"input\") {\r\n                    return (\r\n                        <Col md = {field.modalColSpan} style = {{marginBottom: \"1%\"}}>\r\n                          <Form.Label> {field.displayName} </Form.Label>\r\n                          <Form.Control\r\n                            required = {field.required}\r\n                            as = {field.inputType}\r\n                            name = {field.value}\r\n                            value = {newCar[field.value]}\r\n                            onChange = {(e) => {\r\n                              onChangeNewCar(e);\r\n                            }}\r\n                          />\r\n                          <Form.Control.Feedback type = \"invalid\">\r\n                            Required\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                    );\r\n                  }\r\n                  else if(field.inputType === \"select\") {\r\n                    return (\r\n                        <Col md = {field.modalColSpan} style = {{marginBottom: \"1%\"}}>\r\n                          <Form.Label> {field.displayName} </Form.Label>\r\n                          <Form.Control\r\n                            required = {field.required}\r\n                            as = {field.inputType}\r\n                            name = {field.value}\r\n                            onChange = {(e) => {\r\n                              onChangeNewCar(e);\r\n                            }}\r\n                          >\r\n                            <option value = \"\" selected disabled hidden> Year </option>\r\n                              {field.modalSelectData.map((data) => {\r\n                                return (\r\n                                  <option value = {data}> {data} </option>\r\n                                );\r\n                              })}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type = \"invalid\">\r\n                            Required\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                    );\r\n                  }\r\n                  else {\r\n                    return (\r\n                        <Col md = {field.modalColSpan} style = {{marginBottom: \"1%\"}}>\r\n                          <Form.Label> {field.displayName} </Form.Label>\r\n                          <Form.Control\r\n                            required = {field.required}\r\n                            as = {field.inputType}\r\n                            name = {field.value}\r\n                            value = {newCar[field.value]}\r\n                            onChange = {(e) => {\r\n                              onChangeNewCar(e);\r\n                            }}\r\n                          />\r\n                        </Col>\r\n                    );\r\n                  }\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form>\r\n                    <Form.Group>\r\n                      <Form.Label> Image </Form.Label>\r\n                      <Form.File\r\n                        id = \"image\"\r\n                        onChange = {(e) => {\r\n                          var newCarCopy = JSON.parse(JSON.stringify(newCar));\r\n                          var file = e.target.files[0];\r\n                          if(file) {\r\n                            var extension = file.name.split('.').pop();\r\n                            var imageId = uuidv4().toString() + GENERICFUNCTIONS.getRandomString();\r\n                            var fileType = file.type;\r\n                            newCarCopy.imageId = imageId;\r\n                            newCarCopy.imageType = fileType;\r\n                            var renamedFile = new File([file], imageId + \".\" + extension, {\r\n                              type: fileType\r\n                            });\r\n                            setNewCarImage(renamedFile);\r\n                            setNewCar(newCarCopy);\r\n                          }\r\n                          else {\r\n                            setNewCarImage();\r\n                            newCarCopy.imageId = \"\";\r\n                            setNewCar(newCarCopy);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Col>\r\n                <Col>\r\n                  <Button type = \"submit\" variant = \"success\" style = {{float: \"right\", marginTop: \"10%\"}}>\r\n                    Add\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n      <Row style = {{marginTop: \"2%\"}}>\r\n        <Col lg = {7}>\r\n          <Row>\r\n            <Col xs = {6}>\r\n              <Button variant = \"outline-dark\" style = {{float: \"left\", marginRight: \"3%\"}}\r\n                onClick = {() => {setShowCarModal(true)}}\r\n              >\r\n                +\r\n              </Button>\r\n              <h4 style = {{marginTop: \"0.5%\"}}> Your Cars </h4>\r\n            </Col>\r\n            {cars.length === 0 ?\r\n              <div></div>\r\n              :\r\n              <Col xs = {6} style = {{textAlign: \"right\"}}>\r\n                <Button variant = \"light\" style = {{marginRight: \"1%\"}}\r\n                  onClick = {() => {setIsListView(true)}}\r\n                >\r\n                  <i class = \"fa fa-bars\"> </i> List\r\n                </Button>\r\n                <Button variant = \"light\"\r\n                  onClick = {() => {setIsListView(false)}}\r\n                >\r\n                  <i class = \"fa fa-th-large\"> </i> Grid\r\n                </Button>\r\n              </Col>\r\n            }\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n          {cars.length === 0 ?\r\n            <Col style = {{marginBottom: \"10%\"}}>\r\n              <h6> You have not added any cars. Click the + button to add a car 🚗 </h6>\r\n            </Col>\r\n            :\r\n            <div></div>\r\n          }\r\n          </Row>\r\n          <Row>\r\n            {cars.map((car, index) => {\r\n              var style = {};\r\n              if(index === cars.length - 1) {\r\n                var style = {marginBottom: \"5%\"};\r\n              }\r\n              if(isListView) {\r\n                return (\r\n                  <Col xs = {12} style = {style}>\r\n                    <ListGroup horizontal>\r\n                      <ListGroup.Item action style = {{width: \"100%\"}}>\r\n                        <Row>\r\n                            {car.imageId.toString().trim().length === 0 ?\r\n                              <Figure style = {{height: \"50px\", marginTop: \"1%\"}}>\r\n                                <Figure.Image\r\n                                  width = {100}\r\n                                  height = {100}\r\n                                  src = \"car-holder.png\"\r\n                                />\r\n                              </Figure>\r\n                              :\r\n                              <Figure style = {{height: \"50px\", marginTop: \"1%\"}}>\r\n                                <Figure.Image\r\n                                  width = {100}\r\n                                  height = {100}\r\n                                  src = {car.imageUrl}\r\n                                />\r\n                              </Figure>\r\n                            }\r\n                          <Col>\r\n                            <Row>\r\n                              <Col>\r\n                                <p> <b> {car.name} </b> </p>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col>\r\n                                <p> {car.year + \" \" + \" \" + car.make + \" \" + car.model} </p>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Col>\r\n                                <p> <Badge pills variant = \"light\"> {car.mileage + \" miles\"} </Badge> </p>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                  </Col>\r\n                );\r\n              }\r\n              else {\r\n                return (\r\n                  <Col md = {3} style = {{marginBottom: \"5%\"}}>\r\n                    <a style = {{cursor: \"pointer\"}}>\r\n                      <Card border = \"dark\">\r\n                        {car.imageId.toString().trim().length === 0 ?\r\n                          <Card.Img id = {car.carId} variant = \"top\" src = \"car-holder.png\"/>\r\n                          :\r\n                          <Card.Img id = {car.carId} variant = \"top\" src = {car.imageUrl}/>\r\n                        }\r\n                        <Card.Body>\r\n                          <Row>\r\n                            <Col>\r\n                              <p> <b> {car.name} </b> </p>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <p> {car.year + \" \" + \" \" + car.make + \" \" + car.model} </p>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col>\r\n                              <p> <Badge pills variant = \"light\"> {car.mileage + \" miles\"} </Badge> </p>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </a>\r\n                  </Col>\r\n                );\r\n              }\r\n            })}\r\n          </Row>\r\n        </Col>\r\n        <Col lg = {5}>\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Header>\r\n                  Upcoming Maintenance 🛠️\r\n                  {/*\r\n                  <Button\r\n                    variant = \"outline-dark\"\r\n                    style = {{float: \"right\"}}\r\n                    size = \"sm\"\r\n                    disabled = {cars.length === 0}\r\n                  >\r\n                    +\r\n                  </Button>\r\n                  */}\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  You have nothing scheduled for your cars.\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\domin\\autohub\\src\\components\\AppNavbar.js",["72","73","74"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction AppNavbar() {\r\n  return (\r\n    <Navbar fluid style = {{backgroundColor: \"#A9CCE3\"}}>\r\n      <Navbar.Brand href = \"/\">\r\n        <Row>\r\n          <Col>\r\n            <h4> AutoHub </h4>\r\n          </Col>\r\n        </Row>\r\n      </Navbar.Brand>\r\n      <Nav className = \"mr-auto\">\r\n      </Nav>\r\n      <Nav className = \"justify-content-end\">\r\n        <Button size = \"lg\" variant = \"light\" style = {{backgroundColor: \"#A9CCE3\", margin: \"1%\", float: \"right\"}}>\r\n          🛎️\r\n        </Button>\r\n        <Button size = \"lg\" variant = \"light\" style = {{backgroundColor: \"#A9CCE3\", margin: \"1%\", float: \"right\"}}>\r\n          ✉️\r\n        </Button>\r\n        <Button size = \"lg\" variant = \"light\" style = {{backgroundColor: \"#A9CCE3\", margin: \"1%\", float: \"right\"}}>\r\n          👤\r\n        </Button>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default AppNavbar;\r\n","C:\\Users\\domin\\autohub\\src\\models\\car.js",[],"C:\\Users\\domin\\autohub\\src\\controllers\\genericFunctions.js",[],"C:\\Users\\domin\\autohub\\src\\components\\HomeMobile.js",["75","76","77","78","79","80","81","82"],"C:\\Users\\domin\\autohub\\src\\controllers\\storage.js",[],{"ruleId":"83","severity":1,"message":"84","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":11},{"ruleId":"83","severity":1,"message":"87","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":11},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"83","severity":1,"message":"94","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"95","line":11,"column":7,"nodeType":"85","messageId":"86","endLine":11,"endColumn":11},{"ruleId":"83","severity":1,"message":"96","line":15,"column":22,"nodeType":"85","messageId":"86","endLine":15,"endColumn":39},{"ruleId":"83","severity":1,"message":"97","line":11,"column":8,"nodeType":"85","messageId":"86","endLine":11,"endColumn":22},{"ruleId":"83","severity":1,"message":"98","line":12,"column":8,"nodeType":"85","messageId":"86","endLine":12,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":37,"column":6,"nodeType":"101","endLine":37,"endColumn":22,"suggestions":"102"},{"ruleId":"83","severity":1,"message":"103","line":115,"column":11,"nodeType":"85","messageId":"86","endLine":115,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":310,"column":21,"nodeType":"85","messageId":"106","endLine":310,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":343,"column":53,"nodeType":"109","messageId":"110","endLine":343,"endColumn":54},{"ruleId":"111","severity":1,"message":"112","line":361,"column":21,"nodeType":"113","endLine":361,"endColumn":54},{"ruleId":"107","severity":1,"message":"108","line":376,"column":51,"nodeType":"109","messageId":"110","endLine":376,"endColumn":52},{"ruleId":"83","severity":1,"message":"114","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"94","line":1,"column":27,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"83","severity":1,"message":"115","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":13},{"ruleId":"83","severity":1,"message":"97","line":11,"column":8,"nodeType":"85","messageId":"86","endLine":11,"endColumn":22},{"ruleId":"83","severity":1,"message":"98","line":12,"column":8,"nodeType":"85","messageId":"86","endLine":12,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":37,"column":6,"nodeType":"101","endLine":37,"endColumn":22,"suggestions":"116"},{"ruleId":"83","severity":1,"message":"103","line":115,"column":11,"nodeType":"85","messageId":"86","endLine":115,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":315,"column":21,"nodeType":"85","messageId":"106","endLine":315,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":350,"column":53,"nodeType":"109","messageId":"110","endLine":350,"endColumn":54},{"ruleId":"111","severity":1,"message":"112","line":368,"column":21,"nodeType":"113","endLine":368,"endColumn":54},{"ruleId":"107","severity":1,"message":"108","line":383,"column":51,"nodeType":"109","messageId":"110","endLine":383,"endColumn":52},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],["117"],["118"],"'useEffect' is defined but never used.","'AUTH' is assigned a value but never used.","'toggleRegistering' is assigned a value but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCars'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'form' is assigned a value but never used.","no-redeclare","'style' is already defined.","redeclared","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Image' is defined but never used.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},"Update the dependencies array to be: [getCars, props.userInfo]",{"range":"124","text":"125"},{"range":"126","text":"125"},[1617,1633],"[getCars, props.userInfo]",[1622,1638]]