[{"C:\\Users\\domin\\autohub\\src\\index.js":"1","C:\\Users\\domin\\autohub\\src\\components\\HomeMobile.js":"2","C:\\Users\\domin\\autohub\\src\\components\\Home.js":"3","C:\\Users\\domin\\autohub\\src\\pages\\CarInfo.js":"4","C:\\Users\\domin\\autohub\\src\\controllers\\firebaseapp.js":"5","C:\\Users\\domin\\autohub\\src\\pages\\ScheduledServiceTypes.js":"6","C:\\Users\\domin\\autohub\\src\\components\\Login.js":"7","C:\\Users\\domin\\autohub\\src\\components\\SSTModal.js":"8","C:\\Users\\domin\\autohub\\src\\models\\car.js":"9","C:\\Users\\domin\\autohub\\src\\controllers\\storage.js":"10","C:\\Users\\domin\\autohub\\src\\models\\scheduledServiceType.js":"11","C:\\Users\\domin\\autohub\\src\\components\\AppNavbar.js":"12","C:\\Users\\domin\\autohub\\src\\controllers\\genericFunctions.js":"13","C:\\Users\\domin\\autohub\\src\\controllers\\auth.js":"14","C:\\Users\\domin\\autohub\\src\\controllers\\db.js":"15","C:\\Users\\domin\\autohub\\src\\App.js":"16","C:\\Users\\domin\\autohub\\src\\components\\CarModal.js":"17","C:\\Users\\domin\\autohub\\src\\models\\scheduledService.js":"18","C:\\Users\\domin\\autohub\\src\\components\\ScheduledLog.js":"19","C:\\Users\\domin\\autohub\\src\\models\\logOptions.js":"20","C:\\Users\\domin\\autohub\\src\\components\\RepairLog.js":"21","C:\\Users\\domin\\autohub\\src\\models\\repairService.js":"22","C:\\Users\\domin\\autohub\\src\\models\\serviceLog.js":"23","C:\\Users\\domin\\autohub\\src\\components\\LogFilters.js":"24","C:\\Users\\domin\\autohub\\src\\components\\UpcomingMaintenance.js":"25"},{"size":338,"mtime":1606338417443,"results":"26","hashOfConfig":"27"},{"size":7906,"mtime":1610783278774,"results":"28","hashOfConfig":"27"},{"size":7734,"mtime":1610780302568,"results":"29","hashOfConfig":"27"},{"size":17843,"mtime":1610782844222,"results":"30","hashOfConfig":"27"},{"size":539,"mtime":1606122737011,"results":"31","hashOfConfig":"27"},{"size":9941,"mtime":1610670519560,"results":"32","hashOfConfig":"27"},{"size":5194,"mtime":1610605129855,"results":"33","hashOfConfig":"27"},{"size":23800,"mtime":1610670552473,"results":"34","hashOfConfig":"27"},{"size":1936,"mtime":1609654719171,"results":"35","hashOfConfig":"27"},{"size":1576,"mtime":1609575749606,"results":"36","hashOfConfig":"27"},{"size":867,"mtime":1608752122438,"results":"37","hashOfConfig":"27"},{"size":2395,"mtime":1610783245362,"results":"38","hashOfConfig":"27"},{"size":2434,"mtime":1609828909106,"results":"39","hashOfConfig":"27"},{"size":1310,"mtime":1610664609596,"results":"40","hashOfConfig":"27"},{"size":1721,"mtime":1609726413962,"results":"41","hashOfConfig":"27"},{"size":3248,"mtime":1610602788582,"results":"42","hashOfConfig":"27"},{"size":10358,"mtime":1610576758206,"results":"43","hashOfConfig":"27"},{"size":2640,"mtime":1610576758267,"results":"44","hashOfConfig":"27"},{"size":38127,"mtime":1610783424516,"results":"45","hashOfConfig":"27"},{"size":1000,"mtime":1610576758258,"results":"46","hashOfConfig":"27"},{"size":31252,"mtime":1610783541811,"results":"47","hashOfConfig":"27"},{"size":1702,"mtime":1610576758262,"results":"48","hashOfConfig":"27"},{"size":127,"mtime":1608533923889,"results":"49","hashOfConfig":"27"},{"size":9647,"mtime":1610679037330,"results":"50","hashOfConfig":"27"},{"size":12338,"mtime":1610783356889,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"8mgafs",{"filePath":"55","messages":"56","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\domin\\autohub\\src\\index.js",[],["112","113"],"C:\\Users\\domin\\autohub\\src\\components\\HomeMobile.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128"],"C:\\Users\\domin\\autohub\\src\\components\\Home.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"C:\\Users\\domin\\autohub\\src\\pages\\CarInfo.js",["143","144","145","146"],"C:\\Users\\domin\\autohub\\src\\controllers\\firebaseapp.js",[],["147","148"],"C:\\Users\\domin\\autohub\\src\\pages\\ScheduledServiceTypes.js",["149"],"C:\\Users\\domin\\autohub\\src\\components\\Login.js",["150"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport GoogleButton from 'react-google-button';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nconst AUTH = require('../controllers/auth.js');\r\n\r\nfunction Login(props) {\r\n\r\n  const[loginEmail, setLoginEmail] = useState(\"\");\r\n  const[loginPassword, setPassword] = useState(\"\");\r\n  const[registrationEmail, setRegistrationEmail] = useState(\"\");\r\n  const[registrationPassword, setRegistrationPassword] = useState(\"\");\r\n\r\n  function login() {\r\n    if(loginEmail.trim().length === 0 || loginPassword.trim().length === 0) {\r\n      return;\r\n    }\r\n    AUTH.standardLogin(loginEmail, loginPassword);\r\n  }\r\n\r\n  function register() {\r\n    if(registrationEmail.trim().length === 0 || registrationPassword.trim().length === 0) {\r\n      return;\r\n    }\r\n    AUTH.standardRegister(registrationEmail, registrationPassword);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row style = {{height: \"10%\"}}>\r\n      </Row>\r\n\t\t\t<Row>\r\n        <Col></Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Card.Title\r\n\t\t\t\t\t\t\tstyle = {{textAlign: \"center\", marginTop: \"3%\"}}\r\n\t\t\t\t\t\t>\r\n              AutoHub\r\n              <Image src = \"auto.png\" style = {{marginLeft: \"2%\", marginBottom: \"2%\", width: \"25px\", height: \"25px\"}}/>\r\n\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t<Card.Body>\r\n              <Tabs defaultActiveKey = \"login\" id = \"login-register\">\r\n                <Tab eventKey = \"login\" title = \"Login\">\r\n                  <br/>\r\n                  <div>\r\n                    <Row style = {{marginBottom: \"5%\"}}>\r\n                      <Col>\r\n                        <Form.Label> <strong> Email </strong> </Form.Label>\r\n                        <Form.Control\r\n                          as = \"input\"\r\n                          name = \"loginEmail\"\r\n                          value = {loginEmail}\r\n                          onChange = {(e) => {\r\n                            setLoginEmail(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Form.Label> <strong> Password </strong> </Form.Label>\r\n                        <Form.Control\r\n                          type = \"password\"\r\n                          name = \"loginPassword\"\r\n                          value = {loginPassword}\r\n                          onChange = {(e) => {\r\n                            setPassword(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button variant = \"secondary\" onClick = {() => {login()}}> Login </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey = \"register\" title = \"Register\">\r\n                  <br/>\r\n                  <div>\r\n                    <Row style = {{marginBottom: \"5%\"}}>\r\n                      <Col>\r\n                        <Form.Label> <strong> Email </strong> </Form.Label>\r\n                        <Form.Control\r\n                          as = \"input\"\r\n                          name = \"registrationEmail\"\r\n                          value = {registrationEmail}\r\n                          onChange = {(e) => {\r\n                            setRegistrationEmail(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col>\r\n                        <Form.Label> <strong> Password </strong> </Form.Label>\r\n                        <Form.Control\r\n                          type = \"password\"\r\n                          name = \"registrationPassword\"\r\n                          value = {registrationPassword}\r\n                          onChange = {(e) => {\r\n                            setRegistrationPassword(e.target.value);\r\n                          }}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                      <Col>\r\n                        <Button variant = \"secondary\" onClick = {() => {register()}}> Register </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Tab>\r\n              </Tabs>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<h5> Or </h5>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t{/*TODO: center and make google button responsive */}\r\n\t\t\t\t\t\t\t\t\t<GoogleButton\r\n\t\t\t\t\t\t\t\t\t\ttype = \"light\"\r\n                    onClick = {props.googleSignin}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col></Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n",["151","152"],"C:\\Users\\domin\\autohub\\src\\components\\SSTModal.js",["153","154","155","156","157"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst SSTModel = require('../models/scheduledServiceType.js');\r\nconst GENERICFUNCTIONS = require('../controllers/genericFunctions.js');\r\nconst DB = require('../controllers/db.js');\r\n\r\nfunction SSTModal(props) {\r\n\r\n  const[cars, setCars] = useState();\r\n  const[sst, setSst] = useState();\r\n  const[show, setShow] = useState(false);\r\n  const[title, setTitle] = useState(\"\");\r\n  const[validated, setValidated] = useState(false);\r\n  const[toggleApply, setToggleApply] = useState(false);\r\n  const[selectedCars, setSelectedCars] = useState({});\r\n  const[globalInterval, setGlobalInterval] = useState();\r\n  const[isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setShow(props.show);\r\n    setTitle(props.title);\r\n    setGlobalInterval(SSTModel.interval);\r\n    initialize(props.sst, props.cars);\r\n  }, [props.sst, props.show, props.title, props.userInfo, props.cars])\r\n\r\n  function initialize(initSst, initCars) {\r\n    if(initSst === undefined || initCars === undefined) {\r\n      return;\r\n    }\r\n    var len = Object.keys(initSst.carsScheduled).length;\r\n    var selected = {};\r\n    for(var i = 0; i < initCars.length; i++) {\r\n      var car = initCars[i];\r\n      selected[car.carId] = false;\r\n      if(initSst.carsScheduled[car.carId] === undefined) {\r\n        initSst.carsScheduled[car.carId] = SSTModel.interval;\r\n      }\r\n    }\r\n    setSelectedCars(selected);\r\n    setSst(initSst);\r\n    setCars(initCars);\r\n  }\r\n\r\n  function handleModalClose() {\r\n    setIsLoading(false);\r\n    props.setShow(false);\r\n    setToggleApply(false);\r\n    setValidated(false);\r\n    setSst();\r\n    setTitle(\"\");\r\n  }\r\n\r\n  function onChangeInterval(e, id, option) {\r\n    var name = [e.target.name][0];\r\n    var value = e.target.value;\r\n    var copy = JSON.parse(JSON.stringify(sst));\r\n    if(name === \"time\") {\r\n      if(option === \"quantity\" && isNaN(value)) {\r\n        return;\r\n      }\r\n      copy.carsScheduled[id].time[option] = value;\r\n    }\r\n    else {\r\n      if(isNaN(value)) {\r\n        return;\r\n      }\r\n      copy.carsScheduled[id].miles = value;\r\n    }\r\n    setSst(copy);\r\n    setValidated(false);\r\n  }\r\n\r\n  function onChangeGlobalInterval(e, option) {\r\n    var name = [e.target.name][0];\r\n    var value = e.target.value;\r\n    var copy = JSON.parse(JSON.stringify(globalInterval));\r\n    if(name === \"time\") {\r\n      if(option === \"quantity\" && isNaN(value)) {\r\n        return;\r\n      }\r\n      copy.time[option] = value;\r\n    }\r\n    else {\r\n      if(isNaN(value)) {\r\n        return;\r\n      }\r\n      copy.miles = value;\r\n    }\r\n    setGlobalInterval(copy);\r\n  }\r\n\r\n  function getNumSelected() {\r\n    var count = 0;\r\n    for(var key in selectedCars) {\r\n      if(selectedCars[key] === true) {\r\n        count++;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  function selectAll() {\r\n    var len = Object.keys(selectedCars).length;\r\n    var selected = {};\r\n    for(var i = 0; i < cars.length; i++) {\r\n      var car = cars[i];\r\n      selected[car.carId] = true;\r\n    }\r\n    setSelectedCars(selected);\r\n  }\r\n\r\n  function unselectAll() {\r\n    var len = Object.keys(selectedCars).length;\r\n    var selected = {};\r\n    for(var i = 0; i < cars.length; i++) {\r\n      var car = cars[i];\r\n      selected[car.carId] = false;\r\n    }\r\n    setSelectedCars(selected);\r\n  }\r\n\r\n  function selectCar(id) {\r\n    var copy = JSON.parse(JSON.stringify(selectedCars));\r\n    copy[id] = !copy[id];\r\n    setSelectedCars(copy);\r\n  }\r\n\r\n  function applyGlobalInterval() {\r\n    var copy = JSON.parse(JSON.stringify(sst));\r\n    for(var key in copy.carsScheduled) {\r\n      if(selectedCars[key]) {\r\n        copy.carsScheduled[key] = globalInterval;\r\n      }\r\n    }\r\n    setSst(copy);\r\n  }\r\n\r\n  function onSubmit(e) {\r\n    setValidated(true);\r\n    var isValid = checkSubmitFields();\r\n    if(isValid) {\r\n      if(props.userCreated !== undefined) {\r\n        sst.userCreated = props.userCreated;\r\n        if(sst.typeId.trim().length === 0) {\r\n          sst.typeId = GENERICFUNCTIONS.generateId();\r\n        }\r\n        saveSst();\r\n      }\r\n      else {\r\n        alert(\"Internal error. Could not add scheduled service type\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function saveSst() {\r\n    trimSst();\r\n    setIsLoading(true);\r\n    DB.writeOne(sst.typeId, sst, \"scheduledServiceTypes\",\r\n      function() {\r\n        handleModalClose();\r\n        updateServiceLog();\r\n      },\r\n      function(error) {\r\n        alert(error);\r\n        setIsLoading(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  //have to update serviceNames & intervals in scheduled service log if there is a name change or interval change of an sst\r\n  function updateServiceLog() {\r\n    DB.getQuerey(\"userCreated\", props.userCreated, \"serviceLogs\").onSnapshot(quereySnapshot => {\r\n      var logs = [];\r\n      for(var i = 0; i < quereySnapshot.docs.length; i++) {\r\n        logs.push(quereySnapshot.docs[i].data());\r\n      }\r\n      for(var i = 0; i < logs.length; i++) {\r\n        var log = logs[i];\r\n        for(var j = 0; j < log.scheduledLog.length; j++) {\r\n          var service = log.scheduledLog[j];\r\n          if(service.sstRefId === sst.typeId) {\r\n            service.serviceName = sst.serviceName;\r\n            var dateObj = new Date(service.datePerformed);\r\n            var timeUnits = sst.carsScheduled[log.carReferenceId].time.units;\r\n            var timeStep = sst.carsScheduled[log.carReferenceId].time.quantity;\r\n            var mileageInterval = sst.carsScheduled[log.carReferenceId].miles;\r\n            var car = findCar(log.carReferenceId);\r\n            if(timeUnits.trim().length === 0 || Number(timeStep) === 0) {\r\n              service.nextServiceDate = \"\";\r\n            }\r\n            else {\r\n              service.nextServiceDate = GENERICFUNCTIONS.incrementDate(dateObj, timeUnits, timeStep).toLocaleDateString();\r\n            }\r\n            if(Number(mileageInterval) === 0 || mileageInterval.toString().trim().length === 0) {\r\n              service.nextServiceMileage = \"\";\r\n            }\r\n            else {\r\n              if(Number(service.mileage) === 0) {\r\n                service.nextServiceMileage = (Number(sst.carsScheduled[log.carReferenceId].miles) + Number(car.mileage));\r\n              }\r\n              else {\r\n                service.nextServiceMileage = (Number(sst.carsScheduled[log.carReferenceId].miles) + Number(service.mileage));\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      DB.writeMany(\"logId\", logs, \"serviceLogs\");\r\n    });\r\n  }\r\n\r\n  function findCar(carId) {\r\n    if(carId === undefined || carId === null) {\r\n      return null;\r\n    }\r\n    for(var i = 0; i < cars.length; i++) {\r\n      if(cars[i].carId === carId) {\r\n        return cars[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  function trimSst() {\r\n    sst.serviceName = sst.serviceName.trim();\r\n    for(var key in sst.carsScheduled) {\r\n      var entry = sst.carsScheduled[key];\r\n      entry.miles = Number(entry.miles.toString().trim());\r\n      entry.time.quantity = Number(entry.time.quantity.toString().trim());\r\n      entry.time.units = entry.time.units.trim();\r\n    }\r\n  }\r\n\r\n  function checkSubmitFields() {\r\n    var isValid = true;\r\n    if(sst.serviceName.trim().length === 0) {\r\n      sst.serviceName = \"\";\r\n      isValid = false;\r\n    }\r\n    for(var key in sst.carsScheduled) {\r\n      var entry = sst.carsScheduled[key];\r\n      if(entry.miles.toString().trim().length === 0) {\r\n        sst.carsScheduled[key].miles = 0;\r\n      }\r\n      if(entry.time.quantity.toString().trim().length === 0) {\r\n        sst.carsScheduled[key].time.quantity = 0;\r\n      }\r\n      if(Number(entry.time.quantity.toString().trim()) > 0 && entry.time.units.trim() === \"none\") {\r\n        isValid = false;\r\n      }\r\n      if(entry.time.units.length !== 0 && entry.time.units !== \"none\" && entry.time.quantity === 0) {\r\n        isValid = false;\r\n      }\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  if(sst === undefined || cars === undefined || sst.carsScheduled === undefined) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show = {show}\r\n      onHide = {handleModalClose}\r\n      backdrop = \"static\"\r\n      keyboard = {false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title> {title} </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n          <Row>\r\n            <Col>\r\n              <Form.Label> Service Name </Form.Label>\r\n              <Form.Control\r\n                isInvalid = {validated ? sst.serviceName.trim().length === 0 : undefined}\r\n                size = \"sm\"\r\n                as = \"input\"\r\n                name = \"serviceName\"\r\n                value = {sst.serviceName}\r\n                onChange = {(e) => {\r\n                  var copy = JSON.parse(JSON.stringify(sst));\r\n                  var name = [e.target.name][0];\r\n                  var value = e.target.value;\r\n                  copy[name] = value;\r\n                  setSst(copy);\r\n                  setValidated(false);\r\n                }}\r\n              />\r\n              <Form.Control.Feedback type = \"invalid\">\r\n                Required\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Row>\r\n          <hr style = {{border: \"1px solid lightGray\"}} />\r\n          <Row>\r\n            <Col xs = {9}>\r\n              <h5> Vehicles </h5>\r\n            </Col>\r\n            <Col xs = {3} style = {{textAlign: \"right\"}}>\r\n              {!toggleApply ?\r\n                <Button variant = \"outline-dark\" size = \"sm\"\r\n                  onClick = {() => {\r\n                    setToggleApply(true);\r\n                  }}\r\n                >\r\n                  ✏️\r\n                </Button>\r\n                :\r\n                <Button variant = \"outline-dark\" size = \"sm\"\r\n                  onClick = {() => {\r\n                    setToggleApply(false);\r\n                  }}\r\n                >\r\n                  ✔️\r\n                </Button>\r\n              }\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          {!toggleApply ?\r\n            <div>\r\n              {cars.map((car) => {\r\n                return (\r\n                  <Row>\r\n                    <Col>\r\n                      <ListGroup horizontal>\r\n                        <ListGroup.Item style = {{width: \"100%\"}}>\r\n                          <Row style = {{marginBottom: \"3%\"}}>\r\n                            <Col>\r\n                              <p> <strong> {car.name} </strong> </p>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col sm = {5} style = {{marginBottom: \"3%\"}}>\r\n                              <Form.Label> 💨 Mile Interval </Form.Label>\r\n                              <Form.Control\r\n                                size = \"sm\"\r\n                                as = \"input\"\r\n                                name = \"miles\"\r\n                                value = {sst.carsScheduled[car.carId] !== undefined ?\r\n                                          sst.carsScheduled[car.carId].miles\r\n                                          :\r\n                                          SSTModel.interval.miles\r\n                                        }\r\n                                onChange = {(e) => {\r\n                                  onChangeInterval(e, car.carId);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                            <Col sm = {7}>\r\n                              <Form.Label> 🕒 Time Interval </Form.Label>\r\n                              <InputGroup size = \"sm\">\r\n                                <Form.Control\r\n                                  as = \"input\"\r\n                                  name = \"time\"\r\n                                  value = {sst.carsScheduled[car.carId] !== undefined ?\r\n                                            sst.carsScheduled[car.carId].time.quantity\r\n                                            :\r\n                                            SSTModel.interval.time.quantity\r\n                                          }\r\n                                  isInvalid = {validated && sst.carsScheduled[car.carId] !== undefined ? sst.carsScheduled[car.carId].time.units.length !== 0 && sst.carsScheduled[car.carId].time.units !== \"none\" && sst.carsScheduled[car.carId].time.quantity === 0 : undefined}\r\n                                  onChange = {(e) => {\r\n                                    onChangeInterval(e, car.carId, \"quantity\");\r\n                                  }}\r\n                                  style = {{marginRight: \"2%\"}}\r\n                                />\r\n                                <Form.Control\r\n                                  as = \"select\"\r\n                                  name = \"time\"\r\n                                  value = {sst.carsScheduled[car.carId] !== undefined ?\r\n                                            sst.carsScheduled[car.carId].time.units\r\n                                            :\r\n                                            SSTModel.interval.time.units\r\n                                          }\r\n                                  isInvalid = {validated && sst.carsScheduled[car.carId] !== undefined ? Number(sst.carsScheduled[car.carId].time.quantity.toString().trim()) > 0 && sst.carsScheduled[car.carId].time.units === \"none\"\r\n                                              :\r\n                                              undefined\r\n                                              }\r\n                                  onChange = {(e) => {\r\n                                    onChangeInterval(e, car.carId, \"units\");\r\n                                  }}\r\n                                >\r\n                                  <option value = \"none\" selected> Select </option>\r\n                                  {SSTModel.timeUnits.map((unit) => {\r\n                                    return (\r\n                                      <option value = {unit.value}> {unit.displayName} </option>\r\n                                    );\r\n                                  })}\r\n                                </Form.Control>\r\n                              </InputGroup>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      </ListGroup>\r\n                    </Col>\r\n                  </Row>\r\n                );\r\n              })}\r\n            </div>\r\n            :\r\n            <div>\r\n              <Row style = {{marginBottom: \"3%\"}}>\r\n                <Col>\r\n                  <InputGroup size = \"sm\">\r\n                    <div style = {{marginRight: \"1%\"}}>\r\n                      Every\r\n                    </div>\r\n                    <div style = {{width: \"15%\", marginRight: \"1%\"}}>\r\n                      <Form.Control\r\n                        size = \"sm\"\r\n                        as = \"input\"\r\n                        name = \"miles\"\r\n                        value = {globalInterval !== undefined ?\r\n                                  globalInterval.miles\r\n                                  :\r\n                                  SSTModel.interval.miles\r\n                                }\r\n                        onChange = {(e) => {\r\n                          onChangeGlobalInterval(e);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div style = {{marginRight: \"1%\"}}>\r\n                      miles or\r\n                    </div>\r\n                    <div style = {{width: \"12%\", marginRight: \"1%\"}}>\r\n                      <Form.Control\r\n                        size = \"sm\"\r\n                        as = \"input\"\r\n                        name = \"time\"\r\n                        value = {globalInterval !== undefined ?\r\n                                  globalInterval.time.quantity\r\n                                  :\r\n                                  SSTModel.interval.time.quantity\r\n                                }\r\n                        onChange = {(e) => {\r\n                          onChangeGlobalInterval(e, \"quantity\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <Form.Control\r\n                      as = \"select\"\r\n                      name = \"time\"\r\n                      value = {globalInterval !== undefined ?\r\n                                globalInterval.time.units\r\n                                :\r\n                                SSTModel.interval.time.units\r\n                              }\r\n                      onChange = {(e) => {\r\n                        onChangeGlobalInterval(e, \"units\");\r\n                      }}\r\n                    >\r\n                      <option value = \"\" selected> Select </option>\r\n                      {SSTModel.timeUnits.map((unit) => {\r\n                        return (\r\n                          <option value = {unit.value}> {unit.displayName} </option>\r\n                        );\r\n                      })}\r\n                    </Form.Control>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row style = {{marginBottom: \"3%\"}}>\r\n                <Col style = {{textAlign: \"right\"}}>\r\n                  <Button size = \"sm\" variant = \"success\" style = {{marginRight: \"2%\"}}\r\n                    onClick = {() => {applyGlobalInterval()}}\r\n                  >\r\n                    Apply\r\n                  </Button>\r\n                  <OverlayTrigger\r\n                    key = \"apply-info\"\r\n                    placement = \"bottom\"\r\n                    overlay = {\r\n                      <Tooltip id = \"apply-info-tooltip\">\r\n                        Enter the desired <strong> mile </strong> and/or <strong> time </strong> interval and click the 'Apply' button\r\n                        to apply it to the selected vehicles.\r\n                      </Tooltip>\r\n                    }\r\n                  >\r\n                    <Button size = \"sm\" variant = \"light\">\r\n                      🛈\r\n                    </Button>\r\n                  </OverlayTrigger>\r\n                </Col>\r\n              </Row>\r\n              <hr style = {{border: \"1px solid lightGray\"}} />\r\n              <Row style = {{marginBottom: \"2%\"}}>\r\n                <Col>\r\n                  {getNumSelected() !== 0 ?\r\n                    <Button variant = \"secondary\" size = \"sm\"\r\n                      onClick = {() => {unselectAll()}}\r\n                    >\r\n                      Unselect All\r\n                    </Button>\r\n                    :\r\n                    <Button variant = \"secondary\" size = \"sm\"\r\n                      onClick = {() => {selectAll()}}\r\n                    >\r\n                      Select All\r\n                    </Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              {cars.map((car, index) => {\r\n                return (\r\n                  <Row>\r\n                    <Col>\r\n                      <ListGroup horizontal>\r\n                        <ListGroup.Item>\r\n                          <Row style = {{marginBottom: \"3%\"}}>\r\n                            <Col>\r\n                              <Form.Check\r\n                                type = \"checkbox\"\r\n                                checked = {selectedCars[car.carId]}\r\n                                id = {car.carId + index}\r\n                                label = {<p> <strong> {car.name} </strong> </p>}\r\n                                onChange = {() => {selectCar(car.carId)}}\r\n                              />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col sm = {5} style = {{marginBottom: \"3%\"}}>\r\n                              <Form.Label> 💨 Mile Interval </Form.Label>\r\n                              <Form.Control\r\n                                size = \"sm\"\r\n                                as = \"input\"\r\n                                name = \"miles\"\r\n                                value = {sst.carsScheduled[car.carId] !== undefined ?\r\n                                          sst.carsScheduled[car.carId].miles\r\n                                          :\r\n                                          SSTModel.interval.miles\r\n                                        }\r\n                                onChange = {(e) => {\r\n                                  onChangeInterval(e, car.carId);\r\n                                }}\r\n                              />\r\n                            </Col>\r\n                            <Col sm = {7}>\r\n                              <Form.Label> 🕒 Time Interval </Form.Label>\r\n                              <InputGroup size = \"sm\">\r\n                                <Form.Control\r\n                                  as = \"input\"\r\n                                  name = \"time\"\r\n                                  value = {sst.carsScheduled[car.carId] !== undefined ?\r\n                                            sst.carsScheduled[car.carId].time.quantity\r\n                                            :\r\n                                            SSTModel.interval.time.quantity\r\n                                          }\r\n                                  onChange = {(e) => {\r\n                                    onChangeInterval(e, car.carId, \"quantity\");\r\n                                  }}\r\n                                  style = {{marginRight: \"2%\"}}\r\n                                />\r\n                                <Form.Control\r\n                                  as = \"select\"\r\n                                  name = \"time\"\r\n                                  value = {sst.carsScheduled[car.carId] !== undefined ?\r\n                                            sst.carsScheduled[car.carId].time.units\r\n                                            :\r\n                                            SSTModel.interval.time.units\r\n                                          }\r\n                                  onChange = {(e) => {\r\n                                    onChangeInterval(e, car.carId, \"units\");\r\n                                  }}\r\n                                >\r\n                                  <option value = \"none\" selected> Select </option>\r\n                                  {SSTModel.timeUnits.map((unit) => {\r\n                                    return (\r\n                                      <option value = {unit.value}> {unit.displayName} </option>\r\n                                    );\r\n                                  })}\r\n                                </Form.Control>\r\n                              </InputGroup>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      </ListGroup>\r\n                    </Col>\r\n                  </Row>\r\n                );\r\n              })}\r\n            </div>\r\n          }\r\n      </Modal.Body>\r\n      {!toggleApply ?\r\n        <Modal.Footer>\r\n          <Button disabled = {isLoading} onClick = {() => {onSubmit()}}>\r\n            {isLoading ?\r\n              <Spinner animation = \"border\" size = \"sm\" status = \"role\"/>\r\n              :\r\n              <div></div>\r\n            }\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n        :\r\n        <div></div>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SSTModal;\r\n",["158","159"],"C:\\Users\\domin\\autohub\\src\\models\\car.js",[],["160","161"],"C:\\Users\\domin\\autohub\\src\\controllers\\storage.js",[],"C:\\Users\\domin\\autohub\\src\\models\\scheduledServiceType.js",[],["162","163"],"C:\\Users\\domin\\autohub\\src\\components\\AppNavbar.js",["164","165","166","167","168","169"],"C:\\Users\\domin\\autohub\\src\\controllers\\genericFunctions.js",[],"C:\\Users\\domin\\autohub\\src\\controllers\\auth.js",[],"C:\\Users\\domin\\autohub\\src\\controllers\\db.js",[],"C:\\Users\\domin\\autohub\\src\\App.js",["170","171","172"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Login from './components/Login.js';\r\nimport AppNavbar from './components/AppNavbar.js';\r\nimport Home from './components/Home.js';\r\nimport HomeMobile from './components/HomeMobile.js';\r\nimport ScheduledServiceTypes from './pages/ScheduledServiceTypes.js';\r\nimport CarInfo from './pages/CarInfo.js';\r\n\r\nconst AUTH = require('./controllers/auth.js');\r\nconst MOBILEBREAKPOINT = 500;\r\n\r\nfunction App() {\r\n\r\n  const[userInfo, setUserInfo] = useState();\r\n  //const[screenWidth, setScreenWidth] = useState(window.innerWidth); //pixel size of screen, used to determine when to render components for smaller devices\r\n  const[isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    isUserSignedin();\r\n    detectMobile();\r\n  });\r\n\r\n  //sets userInfo state object\r\n  //passes a call back to AUTH controller to set state object of this component\r\n  function isUserSignedin() {\r\n    const callback = (user) => {\r\n      setUserInfo(user);\r\n    }\r\n    AUTH.isUserSignedin(callback);\r\n  }\r\n\r\n  //detects smaller device (mobile)\r\n  function detectMobile() {\r\n    //window.addEventListener(\"resize\", setScreenWidth(window.innerWidth));\r\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent)) {\r\n      setIsMobile(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path = \"/\">\r\n          {userInfo === null\r\n            ?\r\n              <body style = {{backgroundColor: \"#A9CCE3\"}}>\r\n                <Login\r\n                  googleSignin = {AUTH.googleSignin}\r\n                />\r\n              </body>\r\n            :\r\n              <Container fluid>\r\n                <AppNavbar\r\n                  userInfo = {userInfo}\r\n                />\r\n                {isMobile ?\r\n                  <div>\r\n                    <HomeMobile\r\n                      userInfo = {userInfo}\r\n                    />\r\n                  </div>\r\n                :\r\n                  <div>\r\n                    <Home\r\n                      userInfo = {userInfo}\r\n                    />\r\n                  </div>\r\n                }\r\n              </Container>\r\n          }\r\n        </Route>\r\n        <Route exact path = \"/scheduledServiceTypes\">\r\n          <Container fluid>\r\n            <AppNavbar\r\n              userInfo = {userInfo}\r\n            />\r\n            <ScheduledServiceTypes\r\n              userInfo = {userInfo}\r\n            />\r\n          </Container>\r\n        </Route>\r\n        <Route\r\n          path = \"/carInfo/:carId\"\r\n          render = {(props) =>\r\n            <Container fluid>\r\n              <AppNavbar\r\n                userInfo = {userInfo}\r\n              />\r\n              <CarInfo\r\n                {...props}\r\n                userInfo = {userInfo}\r\n                {...props}\r\n              />\r\n            </Container>\r\n          }\r\n        >\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["173","174"],"C:\\Users\\domin\\autohub\\src\\components\\CarModal.js",["175","176"],"C:\\Users\\domin\\autohub\\src\\models\\scheduledService.js",[],"C:\\Users\\domin\\autohub\\src\\components\\ScheduledLog.js",["177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"C:\\Users\\domin\\autohub\\src\\models\\logOptions.js",[],"C:\\Users\\domin\\autohub\\src\\components\\RepairLog.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"C:\\Users\\domin\\autohub\\src\\models\\repairService.js",[],"C:\\Users\\domin\\autohub\\src\\models\\serviceLog.js",[],"C:\\Users\\domin\\autohub\\src\\components\\LogFilters.js",["208","209","210","211","212","213","214","215"],"C:\\Users\\domin\\autohub\\src\\components\\UpcomingMaintenance.js",["216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":12},{"ruleId":"238","severity":1,"message":"242","line":11,"column":8,"nodeType":"240","messageId":"241","endLine":11,"endColumn":22},{"ruleId":"238","severity":1,"message":"243","line":12,"column":8,"nodeType":"240","messageId":"241","endLine":12,"endColumn":16},{"ruleId":"238","severity":1,"message":"244","line":13,"column":8,"nodeType":"240","messageId":"241","endLine":13,"endColumn":13},{"ruleId":"238","severity":1,"message":"245","line":17,"column":8,"nodeType":"240","messageId":"241","endLine":17,"endColumn":14},{"ruleId":"238","severity":1,"message":"246","line":19,"column":16,"nodeType":"240","messageId":"241","endLine":19,"endColumn":22},{"ruleId":"238","severity":1,"message":"247","line":26,"column":7,"nodeType":"240","messageId":"241","endLine":26,"endColumn":14},{"ruleId":"238","severity":1,"message":"248","line":27,"column":7,"nodeType":"240","messageId":"241","endLine":27,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":37,"column":6,"nodeType":"251","endLine":37,"endColumn":22,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":121,"column":21,"nodeType":"240","messageId":"255","endLine":121,"endColumn":26},{"ruleId":"256","severity":1,"message":"257","line":129,"column":65,"nodeType":"258","messageId":"259","endLine":129,"endColumn":66},{"ruleId":"256","severity":1,"message":"257","line":141,"column":61,"nodeType":"258","messageId":"259","endLine":141,"endColumn":62},{"ruleId":"260","severity":1,"message":"261","line":166,"column":21,"nodeType":"262","endLine":170,"endColumn":22},{"ruleId":"256","severity":1,"message":"257","line":168,"column":63,"nodeType":"258","messageId":"259","endLine":168,"endColumn":64},{"ruleId":"256","severity":1,"message":"257","line":185,"column":59,"nodeType":"258","messageId":"259","endLine":185,"endColumn":60},{"ruleId":"238","severity":1,"message":"239","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":12},{"ruleId":"238","severity":1,"message":"242","line":11,"column":8,"nodeType":"240","messageId":"241","endLine":11,"endColumn":22},{"ruleId":"238","severity":1,"message":"243","line":12,"column":8,"nodeType":"240","messageId":"241","endLine":12,"endColumn":16},{"ruleId":"238","severity":1,"message":"244","line":13,"column":8,"nodeType":"240","messageId":"241","endLine":13,"endColumn":13},{"ruleId":"238","severity":1,"message":"246","line":18,"column":16,"nodeType":"240","messageId":"241","endLine":18,"endColumn":22},{"ruleId":"238","severity":1,"message":"247","line":24,"column":7,"nodeType":"240","messageId":"241","endLine":24,"endColumn":14},{"ruleId":"238","severity":1,"message":"248","line":26,"column":7,"nodeType":"240","messageId":"241","endLine":26,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":36,"column":6,"nodeType":"251","endLine":36,"endColumn":22,"suggestions":"263"},{"ruleId":"253","severity":1,"message":"254","line":114,"column":21,"nodeType":"240","messageId":"255","endLine":114,"endColumn":26},{"ruleId":"256","severity":1,"message":"257","line":122,"column":65,"nodeType":"258","messageId":"259","endLine":122,"endColumn":66},{"ruleId":"256","severity":1,"message":"257","line":134,"column":61,"nodeType":"258","messageId":"259","endLine":134,"endColumn":62},{"ruleId":"260","severity":1,"message":"261","line":159,"column":21,"nodeType":"262","endLine":163,"endColumn":22},{"ruleId":"256","severity":1,"message":"257","line":161,"column":63,"nodeType":"258","messageId":"259","endLine":161,"endColumn":64},{"ruleId":"256","severity":1,"message":"257","line":178,"column":59,"nodeType":"258","messageId":"259","endLine":178,"endColumn":60},{"ruleId":"238","severity":1,"message":"264","line":18,"column":8,"nodeType":"240","messageId":"241","endLine":18,"endColumn":17},{"ruleId":"238","severity":1,"message":"248","line":28,"column":7,"nodeType":"240","messageId":"241","endLine":28,"endColumn":23},{"ruleId":"249","severity":1,"message":"265","line":45,"column":6,"nodeType":"251","endLine":45,"endColumn":48,"suggestions":"266"},{"ruleId":"238","severity":1,"message":"267","line":84,"column":13,"nodeType":"240","messageId":"241","endLine":84,"endColumn":16},{"ruleId":"234","replacedBy":"268"},{"ruleId":"236","replacedBy":"269"},{"ruleId":"249","severity":1,"message":"270","line":33,"column":6,"nodeType":"251","endLine":33,"endColumn":22,"suggestions":"271"},{"ruleId":"238","severity":1,"message":"272","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"234","replacedBy":"273"},{"ruleId":"236","replacedBy":"274"},{"ruleId":"238","severity":1,"message":"275","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":17},{"ruleId":"238","severity":1,"message":"267","line":42,"column":9,"nodeType":"240","messageId":"241","endLine":42,"endColumn":12},{"ruleId":"238","severity":1,"message":"267","line":115,"column":9,"nodeType":"240","messageId":"241","endLine":115,"endColumn":12},{"ruleId":"238","severity":1,"message":"267","line":125,"column":9,"nodeType":"240","messageId":"241","endLine":125,"endColumn":12},{"ruleId":"253","severity":1,"message":"276","line":189,"column":15,"nodeType":"240","messageId":"255","endLine":189,"endColumn":16},{"ruleId":"234","replacedBy":"277"},{"ruleId":"236","replacedBy":"278"},{"ruleId":"234","replacedBy":"279"},{"ruleId":"236","replacedBy":"280"},{"ruleId":"234","replacedBy":"281"},{"ruleId":"236","replacedBy":"282"},{"ruleId":"238","severity":1,"message":"283","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"272","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"242","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":22},{"ruleId":"238","severity":1,"message":"284","line":10,"column":8,"nodeType":"240","messageId":"241","endLine":10,"endColumn":13},{"ruleId":"238","severity":1,"message":"285","line":13,"column":8,"nodeType":"240","messageId":"241","endLine":13,"endColumn":22},{"ruleId":"238","severity":1,"message":"286","line":14,"column":8,"nodeType":"240","messageId":"241","endLine":14,"endColumn":15},{"ruleId":"238","severity":1,"message":"287","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":11},{"ruleId":"238","severity":1,"message":"288","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":11},{"ruleId":"238","severity":1,"message":"289","line":19,"column":7,"nodeType":"240","messageId":"241","endLine":19,"endColumn":23},{"ruleId":"234","replacedBy":"290"},{"ruleId":"236","replacedBy":"291"},{"ruleId":"238","severity":1,"message":"275","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":17},{"ruleId":"238","severity":1,"message":"246","line":9,"column":16,"nodeType":"240","messageId":"241","endLine":9,"endColumn":22},{"ruleId":"238","severity":1,"message":"242","line":11,"column":8,"nodeType":"240","messageId":"241","endLine":11,"endColumn":22},{"ruleId":"238","severity":1,"message":"246","line":14,"column":16,"nodeType":"240","messageId":"241","endLine":14,"endColumn":22},{"ruleId":"238","severity":1,"message":"285","line":19,"column":8,"nodeType":"240","messageId":"241","endLine":19,"endColumn":22},{"ruleId":"238","severity":1,"message":"292","line":44,"column":9,"nodeType":"240","messageId":"241","endLine":44,"endColumn":21},{"ruleId":"238","severity":1,"message":"293","line":44,"column":23,"nodeType":"240","messageId":"241","endLine":44,"endColumn":38},{"ruleId":"249","severity":1,"message":"250","line":61,"column":6,"nodeType":"251","endLine":61,"endColumn":40,"suggestions":"294"},{"ruleId":"238","severity":1,"message":"295","line":63,"column":9,"nodeType":"240","messageId":"241","endLine":63,"endColumn":13},{"ruleId":"296","severity":1,"message":"297","line":274,"column":40,"nodeType":"298","messageId":"299","endLine":275,"endColumn":235},{"ruleId":"296","severity":1,"message":"300","line":278,"column":40,"nodeType":"298","messageId":"299","endLine":279,"endColumn":175},{"ruleId":"296","severity":1,"message":"301","line":289,"column":38,"nodeType":"298","messageId":"299","endLine":289,"endColumn":91},{"ruleId":"302","severity":1,"message":"303","line":421,"column":17,"nodeType":"304","endLine":421,"endColumn":42},{"ruleId":"302","severity":1,"message":"303","line":442,"column":17,"nodeType":"304","endLine":442,"endColumn":42},{"ruleId":"305","severity":1,"message":"306","line":509,"column":53,"nodeType":"298","messageId":"307","endLine":509,"endColumn":55},{"ruleId":"238","severity":1,"message":"308","line":579,"column":31,"nodeType":"240","messageId":"241","endLine":579,"endColumn":38},{"ruleId":"305","severity":1,"message":"306","line":705,"column":53,"nodeType":"298","messageId":"307","endLine":705,"endColumn":55},{"ruleId":"238","severity":1,"message":"308","line":775,"column":31,"nodeType":"240","messageId":"241","endLine":775,"endColumn":38},{"ruleId":"238","severity":1,"message":"309","line":873,"column":35,"nodeType":"240","messageId":"241","endLine":873,"endColumn":43},{"ruleId":"238","severity":1,"message":"243","line":12,"column":8,"nodeType":"240","messageId":"241","endLine":12,"endColumn":16},{"ruleId":"238","severity":1,"message":"246","line":14,"column":16,"nodeType":"240","messageId":"241","endLine":14,"endColumn":22},{"ruleId":"238","severity":1,"message":"285","line":19,"column":8,"nodeType":"240","messageId":"241","endLine":19,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":50,"column":6,"nodeType":"251","endLine":50,"endColumn":40,"suggestions":"310"},{"ruleId":"253","severity":1,"message":"311","line":75,"column":9,"nodeType":"240","messageId":"255","endLine":75,"endColumn":13},{"ruleId":"296","severity":1,"message":"297","line":187,"column":40,"nodeType":"298","messageId":"299","endLine":188,"endColumn":235},{"ruleId":"296","severity":1,"message":"300","line":191,"column":40,"nodeType":"298","messageId":"299","endLine":192,"endColumn":175},{"ruleId":"296","severity":1,"message":"301","line":202,"column":38,"nodeType":"298","messageId":"299","endLine":202,"endColumn":91},{"ruleId":"302","severity":1,"message":"303","line":329,"column":17,"nodeType":"304","endLine":329,"endColumn":42},{"ruleId":"302","severity":1,"message":"303","line":350,"column":17,"nodeType":"304","endLine":350,"endColumn":42},{"ruleId":"305","severity":1,"message":"306","line":403,"column":53,"nodeType":"298","messageId":"307","endLine":403,"endColumn":55},{"ruleId":"238","severity":1,"message":"308","line":447,"column":31,"nodeType":"240","messageId":"241","endLine":447,"endColumn":38},{"ruleId":"305","severity":1,"message":"306","line":570,"column":53,"nodeType":"298","messageId":"307","endLine":570,"endColumn":55},{"ruleId":"238","severity":1,"message":"308","line":614,"column":31,"nodeType":"240","messageId":"241","endLine":614,"endColumn":38},{"ruleId":"238","severity":1,"message":"312","line":19,"column":20,"nodeType":"240","messageId":"241","endLine":19,"endColumn":32},{"ruleId":"238","severity":1,"message":"313","line":20,"column":18,"nodeType":"240","messageId":"241","endLine":20,"endColumn":28},{"ruleId":"238","severity":1,"message":"314","line":22,"column":23,"nodeType":"240","messageId":"241","endLine":22,"endColumn":38},{"ruleId":"238","severity":1,"message":"315","line":23,"column":21,"nodeType":"240","messageId":"241","endLine":23,"endColumn":34},{"ruleId":"238","severity":1,"message":"316","line":25,"column":22,"nodeType":"240","messageId":"241","endLine":25,"endColumn":36},{"ruleId":"238","severity":1,"message":"317","line":34,"column":12,"nodeType":"240","messageId":"241","endLine":34,"endColumn":25},{"ruleId":"238","severity":1,"message":"318","line":45,"column":12,"nodeType":"240","messageId":"241","endLine":45,"endColumn":28},{"ruleId":"238","severity":1,"message":"319","line":55,"column":12,"nodeType":"240","messageId":"241","endLine":55,"endColumn":29},{"ruleId":"238","severity":1,"message":"320","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":17},{"ruleId":"238","severity":1,"message":"321","line":10,"column":8,"nodeType":"240","messageId":"241","endLine":10,"endColumn":16},{"ruleId":"249","severity":1,"message":"322","line":27,"column":6,"nodeType":"251","endLine":27,"endColumn":18,"suggestions":"323"},{"ruleId":"253","severity":1,"message":"276","line":82,"column":17,"nodeType":"240","messageId":"255","endLine":82,"endColumn":18},{"ruleId":"253","severity":1,"message":"276","line":127,"column":13,"nodeType":"240","messageId":"255","endLine":127,"endColumn":14},{"ruleId":"324","severity":1,"message":"325","line":139,"column":37,"nodeType":"326","messageId":"327","endLine":139,"endColumn":39},{"ruleId":"324","severity":1,"message":"325","line":139,"column":112,"nodeType":"326","messageId":"327","endLine":139,"endColumn":114},{"ruleId":"324","severity":1,"message":"328","line":139,"column":112,"nodeType":"326","messageId":"327","endLine":139,"endColumn":114},{"ruleId":"324","severity":1,"message":"328","line":139,"column":142,"nodeType":"326","messageId":"327","endLine":139,"endColumn":144},{"ruleId":"253","severity":1,"message":"276","line":167,"column":13,"nodeType":"240","messageId":"255","endLine":167,"endColumn":14},{"ruleId":"324","severity":1,"message":"325","line":179,"column":37,"nodeType":"326","messageId":"327","endLine":179,"endColumn":39},{"ruleId":"324","severity":1,"message":"325","line":179,"column":113,"nodeType":"326","messageId":"327","endLine":179,"endColumn":115},{"ruleId":"324","severity":1,"message":"328","line":179,"column":113,"nodeType":"326","messageId":"327","endLine":179,"endColumn":115},{"ruleId":"324","severity":1,"message":"328","line":179,"column":143,"nodeType":"326","messageId":"327","endLine":179,"endColumn":145},{"ruleId":"324","severity":1,"message":"328","line":181,"column":84,"nodeType":"326","messageId":"327","endLine":181,"endColumn":86},{"ruleId":"324","severity":1,"message":"328","line":181,"column":114,"nodeType":"326","messageId":"327","endLine":181,"endColumn":116},{"ruleId":"238","severity":1,"message":"329","line":203,"column":9,"nodeType":"240","messageId":"241","endLine":203,"endColumn":20},{"ruleId":"238","severity":1,"message":"330","line":204,"column":9,"nodeType":"240","messageId":"241","endLine":204,"endColumn":14},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Modal' is defined but never used.","'Figure' is defined but never used.","'uuidv4' is defined but never used.","'STORAGE' is assigned a value but never used.","'GENERICFUNCTIONS' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCars'. Either include it or remove the dependency array.","ArrayExpression",["333"],"no-redeclare","'style' is already defined.","redeclared","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["334"],"'Accordion' is defined but never used.","React Hook useEffect has a missing dependency: 'getSsts'. Either include it or remove the dependency array.",["335"],"'len' is assigned a value but never used.",["331"],["332"],"React Hook useEffect has missing dependencies: 'getCars' and 'getSsts'. Either include them or remove the dependency array.",["336"],"'useEffect' is defined but never used.",["331"],["332"],"'Container' is defined but never used.","'i' is already defined.",["331"],["332"],["331"],["332"],["331"],["332"],"'useState' is defined but never used.","'Image' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'MOBILEBREAKPOINT' is assigned a value but never used.",["331"],["332"],"'notSavedShow' is assigned a value but never used.","'setNotSavedShow' is assigned a value but never used.",["337"],"'test' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'option', 'option'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'option', 'filter', 'filter', 'option'.","Function declared in a loop contains unsafe references to variable(s) 'filter', 'filter'.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'popover' is assigned a value but never used.","'strIndex' is assigned a value but never used.",["338"],"'copy' is already defined.","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'setStartMileage' is assigned a value but never used.","'setEndMileage' is assigned a value but never used.","'setServiceName' is assigned a value but never used.","'isInDateRange' is defined but never used.","'isInMileageRange' is defined but never used.","'isSameServiceName' is defined but never used.","'ListGroup' is defined but never used.","'Calendar' is defined but never used.","React Hook useEffect has a missing dependency: 'getServiceLogs'. Either include it or remove the dependency array.",["339"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'currMileage' is assigned a value but never used.","'today' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"340","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"347","fix":"349"},{"desc":"350","fix":"351"},"Update the dependencies array to be: [getCars, props.userInfo]",{"range":"352","text":"353"},{"range":"354","text":"353"},"Update the dependencies array to be: [getSsts, props.match.params.carId, props.userInfo]",{"range":"355","text":"356"},"Update the dependencies array to be: [getCars, getSsts, props.userInfo]",{"range":"357","text":"358"},"Update the dependencies array to be: [props.userInfo, props.serviceLog, getCars]",{"range":"359","text":"360"},{"range":"361","text":"360"},"Update the dependencies array to be: [getServiceLogs, props.cars]",{"range":"362","text":"363"},[1439,1455],"[getCars, props.userInfo]",[1388,1404],[1879,1921],"[getSsts, props.match.params.carId, props.userInfo]",[1111,1127],"[getCars, getSsts, props.userInfo]",[2353,2387],"[props.userInfo, props.serviceLog, getCars]",[2019,2053],[936,948],"[getServiceLogs, props.cars]"]